// -*- C++ -*-
//===--------------------------- __nullptr --------------------------------===//
//
// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
// See https://llvm.org/LICENSE.txt for license information.
// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
//
//===----------------------------------------------------------------------===//

#ifndef NANOSTL__NULLPTR
#define NANOSTL__NULLPTR

//#include <__config>

namespace nanostl {

struct nullptr_t
{
    void* __lx;

    struct __nat {int __for_bool_;};

    inline constexpr nullptr_t() : __lx(0) {}
    inline constexpr nullptr_t(int __nat::*) : __lx(0) {}

    inline constexpr operator int __nat::*() const {return 0;}

    template <class _Tp>
        inline constexpr
        operator _Tp* () const {return 0;}

    template <class _Tp, class _Up>
        inline
        operator _Tp _Up::* () const {return 0;}

    friend inline constexpr bool operator==(nullptr_t, nullptr_t) {return true;}
    friend inline constexpr bool operator!=(nullptr_t, nullptr_t) {return false;}
};

inline constexpr nullptr_t __get_nullptr_t() {return nullptr_t(0);}

//#define nullptr _VSTD::__get_nullptr_t()
#define nullptr nanostl::__get_nullptr_t()

}

#endif  // NANOSTL__NULLPTR
